{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
#include <string>\
#include <math.h>\
#include <fstream>\
#include <chrono>\
\
using namespace std;\
using namespace std::chrono;\
\
//creates an array with 5 * 10^9 elements and then prints all the elements in the array out\
void memoryBenchmark()\{\
    auto total = 0;\
    auto start = high_resolution_clock::now();\
    int arr[100000];\
\
    for(int y = 0; y < 50000; y++)\{\
\
    \}\
    for(long long i = 0; i < 100000; i++)\{\
        arr[i] = i;\
    \}\
\
    auto stop = high_resolution_clock::now();\
    auto time = duration_cast<seconds>(stop - start);\
    cout << "The memory benchmark takes " << time.count() << " seconds." << endl;\
\
\}\
\
//creates and it will print the integer x on the file 10^9 times\
void hardDriveBenchmark()\{\
    auto start = high_resolution_clock::now();\
    ofstream myfile;\
    myfile.open("test.txt");\
    int x = 2;\
    for(int j = 0; j < 10000; j++)\{\
        \
    \}\
    for(long long i=0; i<100000; i++)\{\
        myfile << x << endl;\
    \}\
    myfile.close();\
    auto stop = high_resolution_clock::now();\
    auto time = duration_cast<seconds>(stop - start);\
    cout << "The hard drive benchmark takes " << time.count() << " seconds." << endl;\
\}\
\
//allows you to add, multiply, and divide integers for that many iterations\
void intOperations()\{\
    auto total = 0;\
    auto start = high_resolution_clock::now();\
    int a = rand();\
    for(long long i=1; i<100000000000; i++)\{\
        int n = a+a;\
    \}\
    for(long long i=1; i<50000000000; i++)\{\
        int n = a*a;\
    \}\
    for(long long i=1; i<20000000000; i++)\{\
        int n = a/a;\
    \}\
    auto stop = high_resolution_clock::now();\
    auto time = duration_cast<seconds>(stop - start);\
    cout << "The integer operation benchmark takes " << time.count() << " seconds." << endl;\
\}\
}